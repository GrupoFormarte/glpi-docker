FROM php:8.1-apache

RUN mkdir -p /usr/src/php/ext/

# Instala software necesario
RUN apt-get update --no-install-recommends -yqq && \
	apt-get install --no-install-recommends -yqq \
	zlib1g \
	cron \
	bzip2 \
	wget \
	nano

RUN apt-get update && apt-get install -y gettext
RUN apt-get update && apt-get install -y cron
RUN apt-get update && apt-get install php-mysql

# Download & Install needed php extensions: ldap, imap, zlib, gd, soap
RUN apt-get install -y libz-dev && \
    curl -o zip.tgz -SL http://pecl.php.net/get/zip-1.15.1.tgz && \
        tar -xf zip.tgz -C /usr/src/php/ext/ && \
        rm zip.tgz && \
       	mv /usr/src/php/ext/zip-1.15.1 /usr/src/php/ext/zip && \
		docker-php-ext-install zip

RUN apt-get install --no-install-recommends -y libldap2-dev && \
    docker-php-ext-configure ldap --with-libdir=lib/x86_64-linux-gnu/ && \
	docker-php-ext-install ldap

RUN a2enmod rewrite expires

RUN apt-get install --no-install-recommends -yqq libssl-dev libc-client2007e-dev libkrb5-dev && \
    docker-php-ext-configure imap --with-imap-ssl --with-kerberos && \
    docker-php-ext-install imap

RUN apt-get install --no-install-recommends -yqq libbz2-dev && \
	docker-php-ext-install bz2

RUN apt-get install --no-install-recommends -yqq  re2c libmcrypt-dev libmcrypt4 libmcrypt-dev && \
    curl -o mcrypt.tgz -SL http://pecl.php.net/get/mcrypt-1.0.1.tgz && \
        tar -xf mcrypt.tgz -C /usr/src/php/ext/ && \
        rm mcrypt.tgz && \
        mv /usr/src/php/ext/mcrypt-1.0.1 /usr/src/php/ext/mcrypt && \
		docker-php-ext-install mcrypt

RUN apt-get --no-install-recommends -yqq  install zlib1g-dev && \
    docker-php-ext-install zip && \
    apt-get purge --auto-remove -y zlib1g-dev


# Ejecutar los comando
RUN docker-php-ext-install mysqli

RUN docker-php-ext-install pdo_mysql

# Instala el paquete Supervisor
RUN apt-get update && apt-get install -y supervisor

# Copia los archivos de configuración
COPY supervisord.conf /etc/supervisor/conf.d/supervisord.conf
COPY crontab /etc/cron.d/crontab

# Copia el script de entrada del contenedor
COPY docker-entrypoint.sh /docker-entrypoint.sh
RUN chmod +x /docker-entrypoint.sh

# set recommended PHP.ini settings
# see https://secure.php.net/manual/en/opcache.installation.php
RUN docker-php-ext-install opcache && \
	{ \
		echo 'opcache.memory_consumption=128'; \
		echo 'opcache.interned_strings_buffer=8'; \
		echo 'opcache.max_accelerated_files=4000'; \
		echo 'opcache.revalidate_freq=2'; \
		echo 'opcache.fast_shutdown=1'; \
		echo 'opcache.enable_cli=1'; \
	} > /usr/local/etc/php/conf.d/opcache-recommended.ini


# Habilita la visualización de errores de PHP en el entorno de desarrollo (opcional)
RUN mv "$PHP_INI_DIR/php.ini-development" "$PHP_INI_DIR/php.ini" && \
    sed -i 's/display_errors = Off/display_errors = On/' "$PHP_INI_DIR/php.ini"

# Cambia el propietario de la carpeta /var/www/html para el usuario www-data
RUN chown -R www-data:www-data /var/www/html

# Define el directorio de trabajo
WORKDIR /var/www/html


EXPOSE 80

# Apache Configuration
RUN a2enmod rewrite
RUN a2enmod headers

# Ejecuta el script de entrada
ENTRYPOINT ["/docker-entrypoint.sh"]
# CMD por defecto para el contenedor (puede variar según tus necesidades)
CMD ["apache2-foreground"]
